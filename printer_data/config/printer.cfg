# [include shell_command.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0
[include nevermore.cfg]
[include macros.cfg]
[include KAMP_Settings.cfg]
[include stealthburner_leds.cfg]
# [include Adaptive_Purge.cfg]
[exclude_object]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_31FFD4055650303828572443-if00

[mcu sht36v2]
canbus_uuid:  9cebd70bcea2

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 10000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 8.0

[input_shaper]
#shaper_freq_x: 81.2
#shaper_type_x: ei
#shaper_freq_y: 59.4
#shaper_type_y: ei

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32 #16   #128
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop #^PC0 
position_endstop: 118 # 120
position_max: 118 #120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC0 # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 100

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32 #16   #128
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin:  tmc2209_stepper_y:virtual_endstop #^PC1
position_endstop: 120 #118 #120
position_max:  120 #118 #120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 1 #0                                           # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC1     # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 110 # 255 is most sensitive value, 0 is least sensitive

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB0
dir_pin: PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^PC2
#position_endstop: -0.10
position_max: 117
position_min: -1.5
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
#run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 999999                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#	Thermistor definitions
#####################################################################

[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

## SHT36v2温度
[temperature_sensor FLY-SHT36v2]
sensor_type: temperature_mcu
sensor_mcu: sht36v2

## SHT36v2板载NTC100K温度
[temperature_sensor Warehouse]
sensor_type = ATC Semitec 104GT-2
sensor_pin = sht36v2:PA4
min_temp: -50
max_temp: 350

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: sht36v2:PB4
dir_pin: sht36v2:PB3
enable_pin: !sht36v2:PA15
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 5.7                                            # See 22.23*1.035 on extruders doc
#gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: sht36v2:PA8
sensor_type: ATC Semitec 104NT-4-R025H42G                                 # Adjust for your hotend thermistor. See 'sensor types' list at end of file
sensor_pin: sht36v2:PA3
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 5
max_temp: 270
min_extrude_temp: 170
#min_extrude_temp: 10
max_extrude_only_distance: 780
max_extrude_cross_section: 5
pressure_advance: 0.0                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: sht36v2:PB5
diag_pin: sht36v2:PB6
#tx_pin: PC10
#uart_address: 3
#interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5	# for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
run_current: 0.5
sense_resistor: 0.110
interpolate: False
stealthchop_threshold: 0

[adxl345]
cs_pin: sht36v2:PA9
spi_bus = spi2
# spi_software_sclk_pin: sht36v2:PB13
# spi_software_mosi_pin: sht36v2:PB15
# spi_software_miso_pin: sht36v2:PB14

[resonance_tester]
accel_chip: adxl345
probe_points:
    75, 75, 20

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC9
sensor_type: NTC 100K MGB18-104F39050L32                            # For Keenovo, verify yours
sensor_pin: PC3
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 130
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
#enable_pin: !PC13
pin: sht36v2:PB10
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0	                                                    # You can't PWM the delta fan unless using blue wire

[fan]
pin: sht36v2:PB11
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

# [controller_fan pi_fan]
# pin: PC6
# kick_start_time: 0.25
# heater: heater_bed
# fan_speed: 1

[temperature_fan BoardFan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5
sensor_type: temperature_host
min_temp: 10
max_temp: 80
target_temp: 55
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
#target_temp: 40.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.
#max_speed: 1.0
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when the sensor temperature exceeds the set value.
#   The default is 1.0.
min_speed: 0.45
#   The minimum fan speed (expressed as a value from 0.0 to 1.0) that
#   the fan will be set to for PID temperature fans.
#   The default is 0.3.
#gcode_id:
#   If set, the temperature will be reported in M105 queries using the
#   given id. The default is to not report the temperature via M105.



#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

# [safe_z_home]
# home_xy_position: 60,60
# speed: 50.0
# z_hop: 5

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G1 X60 Y60 F3600
    G28 Z
    G1 Z10
    G1 X60 Y60 F3600
  {% endif %}

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 3,109
screw2_name: back left
screw3: 113,109
screw3_name: back right

[neopixel led_strip]
pin:PA8
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count:20
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRB
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

# [filament_motion_sensor btt_smart_sensor]
# detection_length: 12.0
# #   The minimum length of filament pulled through the sensor to trigger
# #   a state change on the switch_pin
# #   Default is 7 mm.
# extruder: extruder
# #   The name of the extruder section this sensor is associated with.
# #   This parameter must be provided.
# switch_pin: PC15
# #pause_on_runout:
# runout_gcode:
#   led_error
#   PAUSE
#   {action_respond_info("Clog Detected")}
#   M117 Clog Detected

#insert_gcode:
#event_delay:
#pause_delay:
#   See the "filament_switch_sensor" section for a description of the
#   above parameters.

#####################################################################
#	Macros
#####################################################################

[virtual_sdcard]
path: ~/printer_data/gcodes


[pause_resume]
[exclude_object]
#[include timelapse.cfg]
[include Adaptive_Purge.cfg]
[display_status]


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    #SET_FAN_SPEED FAN=controller_fan SPEED=0.4
    #{% set target  = params.BED|int %}
    #{% set toolTemp = params.TOOL_TEMP %}
        # Start bed heating and continue
    {% set BED_TEMP = params.BED|default(0)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(0)|float %}
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    CLEAR_PAUSE
    led_heater
    M140 S{BED_TEMP}
    {% if printer.heater_bed.temperature < params.BED|float*0.95 %}
        M190 S{params.BED|float*0.85} # wait till 0.85 of bed temp is reached, then continue  
    {% endif %}

    M140 S{params.BED|float} 
    M109 S{params.EXTRUDER|float}
    M190 S{params.BED|float}
    led_white
    # FILAMENT_SENSOR_ENABLE
    #M104 S100 ; preheat extruder to no ooze temp
    #M140 S{BED_TEMP} ; set bed temp
    #M190 S{target - 10} ; wait for bed final temp
   # M104 S{EXTRUDER_TEMP} ; set extruder final temp
    #M190 S{BED_TEMP} ; wait for bed final temp
    STATUS_HOMING         # Sets SB-leds to homing-mode
    G28                           ; home all axes
    led_white
    #M109 S{EXTRUDER_TEMP} ; wait for extruder final temp
    #G1 Z20 F3000                   ; move nozzle away from bed
    #G0 X125 Y125 Z30 F3600
    STATUS_PRINTING                                  # Sets SB-leds to printing-mode
    ADAPTIVE_PURGE                                   # Voron logo purge near object
     # VORON_PURGE
[gcode_macro START_PRINT]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
    PRINT_START 

# ##rics v0 start
# [gcode_macro PRINT_START]
# gcode:
#   # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
#   {% set target_bed = params.BED|int %}
#   {% set target_extruder = params.EXTRUDER|int %}

#   {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
#   {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

#   # Homes the printer and sets absolute positioning
#   RESPOND MSG="Initilizing..."
#   LED_HOMING
#   G28                   # Full home (XYZ)
#   G90                   # Absolut position

#   # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak
#   RESPOND MSG="Preheating..."
#   LED_HEATING
#   {% if params.BED|int > 90 %}
#     M106 S255                                         # Turns on the PT-fan

#     #  Uncomment if you have a Nevermore.
#     #SET_FAN_SPEED FAN=Nevermore SPEED=1.0
#     #SET_FAN_SPEED FAN=Bedfan SPEED=0.25

#     G1 X{x_wait} Y{y_wait} Z15 F9000                  # Goes to center of the bed
#     M190 S{target_bed}                                # Sets target temp for the bed
#     RESPOND MSG="Heating Chamber..."
#     #SET_FAN_SPEED FAN=Bedfan SPEED=0.4
#     TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

#   # If the bed temp is not over 90c then it skips the heatsoak and just heats up to set temp with a 1min soak.
#   {% else %}
#     G1 X{x_wait} Y{y_wait} Z15 F9000                # Goes to center of the bed
#     M190 S{target_bed}                              # Sets target temp for the bed
#     G4 P60000                                      # Waits 1 min for the bedtemp to stabilize
#   {% endif %}
#   #MR_NOTIFY TITLE="$printer_name" MESSAGE=" is almost ready to print"
#   # Heats up the nozzle up to target via slicer
#   #RESPOND MSG="Waiting for hotend..."
#   #M107                                              # Turns off the PT-fan
#   G1 X5 Y4 Z15 F10000                             # Moves to starting point
#   M109 S{target_extruder}                           # Heats the nozzle to your print temp

#   # Create a purge line and starts the print
#   LED_PURGE
#   #SET_GCODE_VARIABLE MACRO=CASELIGHT_INIT VARIABLE=state VALUE={1}
#   RESPOND MSG="Printing"
#   G1 X5 Y4 Z0.4 F10000                             # Moves to starting point
#   G1 X115 E20 F1000                                # Purge line
#   LED_PRINTING


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
    led_rainbow
    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    
    # M400                           ; wait for buffer to clear
    # G92 E0                         ; zero the extruder
    # G1 E-4.0 F3600                 ; retract filament 4mm
    
    TURN_OFF_HEATERS
    # FILAMENT_SENSOR_DISABLE
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y110 F3600          ; park nozzle at rear
    M117 Blik-Print Finished!

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  # FILAMENT_SENSOR_DISABLE
  M106 S0
  CANCEL_PRINT_BASE
  # _HOME_X
  # _HOME_Y
  # G28 XY
  SDCARD_RESET_FILE
[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}
  


[gcode_macro M600]
gcode:
  G1 E-50 F300
  G1 E-50 F300
  G1 E-50 F300
  #FILAMENT_SENSOR_DISABLE
  M117 paused for filament change
  PAUSE
  G1 E50 F300
  G1 E50 F300
  #FILAMENT_SENSOR_DISABLE
  G1 E50 F300
[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    #STATUS_BUSY
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 15.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    # FILAMENT_SENSOR_DISABLE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
      led_white
      ##### read E from pause macro #####
      {% set E = printer["gcode_macro PAUSE"].extrude|float %}
      #### get VELOCITY parameter if specified ####
      {% if 'VELOCITY' in params|upper %}
        {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
      {%else %}
        {% set get_params = "" %}
      {% endif %}
      ##### end of definitions #####
      {% if printer.extruder.can_extrude|lower == 'true' %}
        G91
        G1 E{E} F2100
      {% else %}
        {action_respond_info("Extruder not hot enough")}
      {% endif %}  
      G90
      RESUME_BASE {get_params}
      # FILAMENT_SENSOR_ENABLE
      M117 Printing
      G90
      led_white

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-40 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

# [gcode_macro FILAMENT_SENSOR_ENABLE]
# description: Cancel the actual running print
# gcode:
#     SET_FILAMENT_SENSOR SENSOR=btt_smart_sensor ENABLE=1

# [gcode_macro FILAMENT_SENSOR_DISABLE]
# description: Cancel the actual running print
# gcode:
#     SET_FILAMENT_SENSOR SENSOR=btt_smart_sensor ENABLE=0

# [delayed_gcode FILAMENT_STARTUP]
# gcode:
#     FILAMENT_SENSOR_DISABLE
# #   A list of G-Code commands to execute when the delay duration has
# #   elapsed. G-Code templates are supported. This parameter must be
# #   provided.
# initial_duration: 1.0
# #   The duration of the initial delay (in seconds). If set to a
# #   non-zero value the delayed_gcode will execute the specified number
# #   of seconds after the printer enters the "ready" state. This can be
# #   useful for initialization procedures or a repeating delayed_gcode.
# #   If set to 0 the delayed_gcode will not execute on startup.
# #   Default is 0.


[gcode_macro led_white]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED LED=led_strip RED=0.4 GREEN=0.4 BLUE=0.4

[gcode_macro led_red]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED LED=led_strip RED=1 GREEN=0 BLUE=0

[gcode_macro led_green]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED LED=led_strip RED=0 GREEN=1 BLUE=0

[gcode_macro led_OFF]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED LED=led_strip RED=0 GREEN=0 BLUE=0
[led_effect effect_led_rainbow]
autostart:              false
frame_rate:             12
leds:
    neopixel:led_strip
layers:
#   breathing  10 1 top (.5,.5,1)
    gradient  0.5 1 top (0.5, 0.0, 0.0),(0.0, 0.5, 0.0),(0.0, 0.0, 0.5)

[led_effect effect_led_chase]
autostart:              false
frame_rate:             24
leds:
    neopixel:led_strip
layers:
#   breathing  10 1 top (.5,.5,1)
    chase  1 1 top (0.5, 0.0, 0.0),(0.0, 0.5, 0.0),(0.0, 0.0, 0.5)

[led_effect effect_led_red_comet]
autostart:              true
frame_rate:             24
leds:
    neopixel:led_strip
layers:
#   breathing  10 1 top (.5,.5,1)
    comet  0.3 1 top (1.0, 0.0, 0.0),(1.0, 0.0, 0.0),(1.0, 0.0, 0.0)

[led_effect effect_led_heater]
autostart:              false
heater:                 heater_bed
frame_rate:             24
leds:
    neopixel:led_strip
layers:
#   breathing  10 1 top (.5,.5,1)
    heaterfire  1 0 top (0.7,0.7,0),(0.7,0,0)

[led_effect effect_led_error]
leds:
    neopixel:led_strip
layers:
    strobe         1  1.5   add        (0.7,  0.7, 0.7)
    breathing      2  0     difference (0.66, 0.0, 0.0)
    static         1  0     top        (0.7,  0.0, 0.0)
autostart:                             false
frame_rate:                            24
run_on_error:                          true

[gcode_macro led_rainbow]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED_EFFECT EFFECT=effect_led_rainbow

[gcode_macro led_chase]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED_EFFECT EFFECT=effect_led_chase

[gcode_macro led_red_comet]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED_EFFECT EFFECT=effect_led_red_comet

[gcode_macro led_heater]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED_EFFECT EFFECT=effect_led_heater

[gcode_macro led_error]
gcode:
  STOP_LED_EFFECTS LEDS="neopixel:led_strip"
  SET_LED_EFFECT EFFECT=effect_led_error

##   Sensor Types
##   "Trianglelab NTC100K B3950" (Beta 3950 used in LDO kits)
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "Generic 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
##   For more information: https://www.klipper3d.org/Config_Reference.html#temperature_sensor

## Footnote about Beta 3950:
## https://github.com/Klipper3d/klipper/issues/4054
## https://github.com/Klipper3d/klipper/pull/4859

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 60.331
#*# pid_ki = 2.718
#*# pid_kd = 334.840
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 37.500
#*# pid_ki = 5.952
#*# pid_kd = 59.063
#*#
#*# [stepper_z]
#*# position_endstop = -0.061
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 77.8
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 42.8
